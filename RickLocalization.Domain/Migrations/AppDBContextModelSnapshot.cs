// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RickLocalization.Domain.Context;

namespace RickLocalization.Domain.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RickLocalization.Domain.Entities.Dimensao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("VARCHAR(1000)");

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("Dimensoes");
                });

            modelBuilder.Entity("RickLocalization.Domain.Entities.LogViagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataViagem")
                        .HasColumnType("datetime2");

                    b.Property<int>("DimensaoDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("DimensaoOrigemId")
                        .HasColumnType("int");

                    b.Property<int>("ViajanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ViajanteId");

                    b.ToTable("LogsViagens");
                });

            modelBuilder.Entity("RickLocalization.Domain.Entities.Viajante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("DimensaoId")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("DimensaoId");

                    b.ToTable("Viajantes");
                });

            modelBuilder.Entity("RickLocalization.Domain.Entities.LogViagem", b =>
                {
                    b.HasOne("RickLocalization.Domain.Entities.Viajante", "Viajante")
                        .WithMany("LogsViagens")
                        .HasForeignKey("ViajanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RickLocalization.Domain.Entities.Viajante", b =>
                {
                    b.HasOne("RickLocalization.Domain.Entities.Dimensao", "Dimensao")
                        .WithMany()
                        .HasForeignKey("DimensaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
